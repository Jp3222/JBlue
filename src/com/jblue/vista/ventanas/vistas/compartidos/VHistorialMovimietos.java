/*
 * Copyright (C) 2023 jp
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.jblue.vista.ventanas.vistas.compartidos;

import com.jblue.modelo.ConstGs;
import com.jblue.modelo.objetos.OHisMovimientos;
import com.jblue.util.cache.FabricaOpraciones;
import com.jblue.util.cache.MemoCache;
import com.jblue.util.modelosgraficos.model.ModeloTablas;
import com.jblue.vista.normas.SuperVista;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author jp
 */
public class VHistorialMovimietos extends SuperVista {

    private final MemoCache<OHisMovimientos> memo_cache;
    private final ArrayList<OHisMovimientos> cache;
    private final ArrayList<OHisMovimientos> lista_aux;
    private final ModeloTablas modelo_tabla;

    /**
     * Creates new form VHistorialMovimietos
     */
    public VHistorialMovimietos() {
        memo_cache = new MemoCache(FabricaOpraciones.HISTORIAL_DE_MOVIMIENTOS);
        memo_cache.setRangoActivo(true);
        memo_cache.cargar();
        cache = memo_cache.getLista();
        lista_aux = new ArrayList<>(cache.size());
        modelo_tabla = new ModeloTablas(ConstGs.BD_HISTORIAL_MOVIMIENTOS);
        //
        initComponents();
        tabla_historial.setModel(modelo_tabla);
        llamable();
    }

    @Override
    protected final void llamable() {
        contruirComponentes();
        componentesEstadoFinal();
        componentesEstadoInicial();
        manejoEventos();
    }

    @Override
    protected void componentesEstadoFinal() {
        for (int i = 0; i < ConstGs.BD_HISTORIAL_MOVIMIENTOS.length; i++) {
            modelo_tabla.setCellEditable(i, false);
        }

    }

    @Override
    public void componentesEstadoInicial() {

    }

    @Override
    protected void contruirComponentes() {

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        recargar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        ant = new javax.swing.JButton();
        sig = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        buscador = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_historial = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        resultados = new javax.swing.JLabel();
        rango = new javax.swing.JLabel();

        setName("Historial de movimientos"); // NOI18N
        setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        add(jPanel1, java.awt.BorderLayout.NORTH);

        jPanel2.setLayout(new java.awt.BorderLayout(0, 5));

        jPanel3.setMinimumSize(new java.awt.Dimension(100, 50));
        jPanel3.setPreferredSize(new java.awt.Dimension(1000, 30));
        jPanel3.setLayout(new java.awt.BorderLayout(5, 0));

        recargar.setText("jButton1");
        recargar.setPreferredSize(new java.awt.Dimension(150, 30));
        recargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recargarActionPerformed(evt);
            }
        });
        jPanel3.add(recargar, java.awt.BorderLayout.WEST);

        jPanel4.setPreferredSize(new java.awt.Dimension(200, 30));
        jPanel4.setLayout(new java.awt.GridLayout(1, 2));

        ant.setText("jButton2");
        ant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                antActionPerformed(evt);
            }
        });
        jPanel4.add(ant);

        sig.setText("jButton3");
        sig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sigActionPerformed(evt);
            }
        });
        jPanel4.add(sig);

        jPanel3.add(jPanel4, java.awt.BorderLayout.EAST);

        jPanel5.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel5.setLayout(new java.awt.BorderLayout());
        jPanel5.add(buscador, java.awt.BorderLayout.CENTER);

        jPanel3.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel3, java.awt.BorderLayout.NORTH);

        tabla_historial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla_historial);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel6.setPreferredSize(new java.awt.Dimension(1000, 20));
        jPanel6.setLayout(new java.awt.BorderLayout());

        jPanel7.setPreferredSize(new java.awt.Dimension(200, 20));
        jPanel7.setLayout(new java.awt.BorderLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Resultados: ");
        jLabel1.setToolTipText("");
        jPanel7.add(jLabel1, java.awt.BorderLayout.WEST);

        resultados.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        resultados.setText("jLabel2");
        jPanel7.add(resultados, java.awt.BorderLayout.CENTER);

        jPanel6.add(jPanel7, java.awt.BorderLayout.WEST);

        rango.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        rango.setText("jLabel3");
        jPanel6.add(rango, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel6, java.awt.BorderLayout.SOUTH);

        add(jPanel2, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void recargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recargarActionPerformed
        _actualizar();
    }//GEN-LAST:event_recargarActionPerformed

    private void antActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_antActionPerformed
        //if (memo_cache.getAnt() > 0) {
        memo_cache.ant();
        memo_cache.actualizar();
        if (cache.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay mas resultados");
            memo_cache.sig();
            memo_cache.actualizar();
        }
        _actualizar();
        //}
    }//GEN-LAST:event_antActionPerformed

    private void sigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sigActionPerformed
        memo_cache.sig();
        memo_cache.actualizar();
        if (cache.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay mas resultados");
            memo_cache.ant();
            memo_cache.actualizar();
        }
        _actualizar();
    }//GEN-LAST:event_sigActionPerformed

    void _cargar() {
        for (OHisMovimientos i : cache) {
            System.out.println(i.getId());
            modelo_tabla.addRow(i.getInfo());
        }
    }

    void _actualizar() {
        modelo_tabla.clear();
        resultados.setText(String.valueOf(cache.size()));
        rango.setText(memo_cache.getLimite_min() + " - " + memo_cache.getLimite_max());
        _cargar();
    }

    @Override
    public void setVisible(boolean aFlag) {
        super.setVisible(aFlag);
        if (aFlag) {
            _cargar();
        } else {
            modelo_tabla.clear();
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ant;
    private javax.swing.JTextField buscador;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel rango;
    private javax.swing.JButton recargar;
    private javax.swing.JLabel resultados;
    private javax.swing.JButton sig;
    private javax.swing.JTable tabla_historial;
    // End of variables declaration//GEN-END:variables
}
