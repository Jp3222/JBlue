/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.jblue.vista.ventanas.menus.bd;

import com.jblue.controlador.CTipoTomas;
import com.jblue.modelo.ConstBD;
import com.jblue.modelo.envoltorios.Operaciones;
import com.jblue.modelo.objetos.OTipoTomas;
import com.jblue.modelo.objetos.OUsuarios;
import com.jblue.util.FormatoBD;
import com.jblue.util.cache.FabricaCache;
import com.jblue.util.cache.FabricaOpraciones;
import com.jblue.util.cache.MemoCache;
import com.jblue.vista.normas.SuperVentana;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jp
 */
public class MenuTomas extends SuperVentana {

    private OTipoTomas tipo_de_toma_buscada;
    private final ArrayList<OTipoTomas> lista_auxiliar;
    private final MemoCache<OTipoTomas> memoria_cache;
    private final ArrayList<OTipoTomas> cache;
    private final Operaciones<OTipoTomas> operaciones;
    private boolean buscando;
    //
    private final DefaultTableModel modelo_tabla;

    private final CTipoTomas controlador;

    /**
     * Creates new form NewMenuCalles
     */
    public MenuTomas() {
        _TITULO = 5;
        this.lista_auxiliar = new ArrayList<>();
        memoria_cache = FabricaCache.MC_TIPOS_DE_TOMAS;
        cache = memoria_cache.getLista();
        operaciones = FabricaOpraciones.TIPOS_DE_TOMAS;
        //
        initComponents();
        modelo_tabla = (DefaultTableModel) jtTipoDeTomas.getModel();
        //
        llamable();
        controlador = new CTipoTomas(this);
    }

    @Override
    protected final void llamable() {
        estadoFinal();
        estadoInicial();
        addEventos();
    }

    @Override
    protected void estadoFinal() {
        super.estadoFinal();
        jbtCancelar.setEnabled(true);
    }

    @Override
    public void estadoInicial() {
        tipo_de_toma_buscada = null;
        lista_auxiliar.clear();
        //
        jtfBuscador.setText(null);
        jtfTipo.setText(null);
        jtfCosto.setText(null);
        jtfRecargo.setText(null);
        //
        jtfTipo.requestFocusInWindow();
        botonesPrimarios();
    }

    @Override
    protected void addComponentes() {
        super.addComponentes(); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
    }

    @Override
    protected void addEventos() {

        jbtRecrgar.addActionListener(e -> {
            controlador.actualizarTabla();
            tipo_de_toma_buscada = null;
            lista_auxiliar.clear();
            jtfBuscador.setText(null);
        });

    }

    public void botonesPrimarios() {
        jbtGuardar.setEnabled(true);
        jbtActualizar.setEnabled(false);
        jbtEliminar.setEnabled(false);
    }

    public void botonesSecundarios() {
        jbtGuardar.setEnabled(false);
        jbtActualizar.setEnabled(true);
        jbtEliminar.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panel_izq = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jtfBuscador = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jbtRecrgar = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jbtAnterior = new javax.swing.JButton();
        jbtSiguiente = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtTipoDeTomas = new javax.swing.JTable();
        panel_der = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel17 = new javax.swing.JPanel();
        panelCampos = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jtfTipo = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jtfCosto = new javax.swing.JTextField();
        jPanel25 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jtfRecargo = new javax.swing.JTextField();
        panel_Botones = new javax.swing.JPanel();
        jPanel26 = new javax.swing.JPanel();
        jbtGuardar = new javax.swing.JButton();
        jbtActualizar = new javax.swing.JButton();
        jbtEliminar = new javax.swing.JButton();
        jbtCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new java.awt.BorderLayout());

        panel_izq.setMinimumSize(new java.awt.Dimension(500, 700));
        panel_izq.setPreferredSize(new java.awt.Dimension(500, 700));
        panel_izq.setLayout(new java.awt.BorderLayout());

        jPanel2.setPreferredSize(new java.awt.Dimension(500, 30));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jtfBuscador.setPreferredSize(new java.awt.Dimension(500, 30));
        jtfBuscador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfBuscadorKeyReleased(evt);
            }
        });
        jPanel2.add(jtfBuscador, java.awt.BorderLayout.CENTER);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jblue/media/img/x24/buscar.png"))); // NOI18N
        jPanel2.add(jLabel7, java.awt.BorderLayout.WEST);

        panel_izq.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jPanel5.setPreferredSize(new java.awt.Dimension(500, 670));
        jPanel5.setLayout(new java.awt.BorderLayout());

        jPanel7.setPreferredSize(new java.awt.Dimension(500, 30));
        jPanel7.setLayout(new java.awt.BorderLayout());

        jbtRecrgar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jblue/media/img/x24/recargar.png"))); // NOI18N
        jbtRecrgar.setToolTipText("Recargar Pagina");
        jbtRecrgar.setPreferredSize(new java.awt.Dimension(100, 25));
        jPanel7.add(jbtRecrgar, java.awt.BorderLayout.WEST);

        jPanel10.setPreferredSize(new java.awt.Dimension(200, 70));
        jPanel10.setLayout(new java.awt.BorderLayout());

        jbtAnterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jblue/media/img/x24/previous.png"))); // NOI18N
        jbtAnterior.setToolTipText("Pagina anterior");
        jbtAnterior.setEnabled(false);
        jbtAnterior.setPreferredSize(new java.awt.Dimension(100, 25));
        jPanel10.add(jbtAnterior, java.awt.BorderLayout.WEST);

        jbtSiguiente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jblue/media/img/x24/next-button.png"))); // NOI18N
        jbtSiguiente.setToolTipText("Pagina siguiente");
        jbtSiguiente.setEnabled(false);
        jbtSiguiente.setPreferredSize(new java.awt.Dimension(100, 25));
        jPanel10.add(jbtSiguiente, java.awt.BorderLayout.EAST);

        jPanel7.add(jPanel10, java.awt.BorderLayout.EAST);

        jPanel5.add(jPanel7, java.awt.BorderLayout.NORTH);

        jPanel6.setPreferredSize(new java.awt.Dimension(500, 640));
        jPanel6.setLayout(new java.awt.BorderLayout());

        jtTipoDeTomas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tipo", "Costo", "Recargo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtTipoDeTomas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtTipoDeTomasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtTipoDeTomas);

        jPanel6.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel5.add(jPanel6, java.awt.BorderLayout.CENTER);

        panel_izq.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel1.add(panel_izq, java.awt.BorderLayout.WEST);

        panel_der.setMinimumSize(new java.awt.Dimension(500, 700));
        panel_der.setPreferredSize(new java.awt.Dimension(500, 700));
        panel_der.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setMinimumSize(new java.awt.Dimension(500, 300));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(500, 700));

        jPanel17.setMinimumSize(new java.awt.Dimension(500, 700));
        jPanel17.setPreferredSize(new java.awt.Dimension(500, 700));
        jPanel17.setLayout(new javax.swing.BoxLayout(jPanel17, javax.swing.BoxLayout.PAGE_AXIS));

        panelCampos.setPreferredSize(new java.awt.Dimension(500, 600));
        panelCampos.setLayout(new java.awt.GridLayout(8, 0));

        jPanel12.setMinimumSize(new java.awt.Dimension(500, 50));
        jPanel12.setPreferredSize(new java.awt.Dimension(500, 50));
        jPanel12.setLayout(new java.awt.BorderLayout());

        jLabel1.setFont(new java.awt.Font("Ubuntu", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Datos del tipo de toma");
        jLabel1.setPreferredSize(new java.awt.Dimension(500, 40));
        jPanel12.add(jLabel1, java.awt.BorderLayout.CENTER);

        panelCampos.add(jPanel12);

        jPanel14.setMinimumSize(new java.awt.Dimension(500, 50));
        jPanel14.setPreferredSize(new java.awt.Dimension(500, 50));
        jPanel14.setLayout(new java.awt.BorderLayout());

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("Tipo de toma");
        jLabel2.setPreferredSize(new java.awt.Dimension(100, 25));
        jPanel14.add(jLabel2, java.awt.BorderLayout.NORTH);

        jtfTipo.setPreferredSize(new java.awt.Dimension(500, 25));
        jtfTipo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfTipoKeyTyped(evt);
            }
        });
        jPanel14.add(jtfTipo, java.awt.BorderLayout.CENTER);

        panelCampos.add(jPanel14);

        jPanel16.setMinimumSize(new java.awt.Dimension(500, 50));
        jPanel16.setPreferredSize(new java.awt.Dimension(500, 50));
        jPanel16.setLayout(new java.awt.BorderLayout());

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("Costo: ");
        jLabel3.setPreferredSize(new java.awt.Dimension(100, 25));
        jPanel16.add(jLabel3, java.awt.BorderLayout.NORTH);

        jtfCosto.setPreferredSize(new java.awt.Dimension(500, 25));
        jtfCosto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfCostoKeyTyped(evt);
            }
        });
        jPanel16.add(jtfCosto, java.awt.BorderLayout.CENTER);

        panelCampos.add(jPanel16);

        jPanel25.setMinimumSize(new java.awt.Dimension(500, 50));
        jPanel25.setPreferredSize(new java.awt.Dimension(500, 50));
        jPanel25.setLayout(new java.awt.BorderLayout());

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("Costo del recargo");
        jLabel4.setPreferredSize(new java.awt.Dimension(116, 25));
        jPanel25.add(jLabel4, java.awt.BorderLayout.NORTH);

        jtfRecargo.setPreferredSize(new java.awt.Dimension(500, 40));
        jtfRecargo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfRecargoKeyTyped(evt);
            }
        });
        jPanel25.add(jtfRecargo, java.awt.BorderLayout.CENTER);

        panelCampos.add(jPanel25);

        jPanel17.add(panelCampos);

        panel_Botones.setPreferredSize(new java.awt.Dimension(500, 100));
        panel_Botones.setLayout(new java.awt.GridLayout(2, 1));

        jPanel26.setPreferredSize(new java.awt.Dimension(500, 50));
        jPanel26.setLayout(new java.awt.GridLayout(1, 3));

        jbtGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jblue/media/img/x32/disquete.png"))); // NOI18N
        jbtGuardar.setText("Guardar");
        jbtGuardar.setMinimumSize(new java.awt.Dimension(100, 50));
        jbtGuardar.setPreferredSize(new java.awt.Dimension(100, 50));
        jbtGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtGuardarActionPerformed(evt);
            }
        });
        jPanel26.add(jbtGuardar);

        jbtActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jblue/media/img/x32/actualizar.png"))); // NOI18N
        jbtActualizar.setText("Actualizar");
        jbtActualizar.setMinimumSize(new java.awt.Dimension(100, 50));
        jbtActualizar.setPreferredSize(new java.awt.Dimension(100, 50));
        jbtActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtActualizarActionPerformed(evt);
            }
        });
        jPanel26.add(jbtActualizar);

        jbtEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jblue/media/img/x32/eliminar.png"))); // NOI18N
        jbtEliminar.setText("Eliminar");
        jbtEliminar.setMinimumSize(new java.awt.Dimension(100, 50));
        jbtEliminar.setPreferredSize(new java.awt.Dimension(100, 50));
        jbtEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtEliminarActionPerformed(evt);
            }
        });
        jPanel26.add(jbtEliminar);

        panel_Botones.add(jPanel26);

        jbtCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jblue/media/img/x32/cerca.png"))); // NOI18N
        jbtCancelar.setText("Cancelar");
        jbtCancelar.setPreferredSize(new java.awt.Dimension(500, 50));
        jbtCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtCancelarActionPerformed(evt);
            }
        });
        panel_Botones.add(jbtCancelar);

        jPanel17.add(panel_Botones);

        jScrollPane2.setViewportView(jPanel17);

        panel_der.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel1.add(panel_der, java.awt.BorderLayout.CENTER);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jtTipoDeTomasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtTipoDeTomasMouseClicked
        int seleccionado = jtTipoDeTomas.getSelectedRow();

        ArrayList<OTipoTomas> aux;
        if (buscando) {
            aux = lista_auxiliar;
        } else {
            aux = cache;
        }

        if (seleccionado < 0 || seleccionado >= aux.size()) {
            return;
        }

        tipo_de_toma_buscada = aux.get(seleccionado);

        if (evt.getClickCount() == 2) {
            jtfBuscador.setText(null);
            jtfTipo.setText(tipo_de_toma_buscada.getTipo());
            jtfCosto.setText(tipo_de_toma_buscada.getCosto() + "");
            jtfRecargo.setText(tipo_de_toma_buscada.getRecargo() + "");
            botonesSecundarios();
            jtTipoDeTomas.clearSelection();
            controlador.actualizarTabla();
            if (buscando) {
                buscando = false;
            }
        }

    }//GEN-LAST:event_jtTipoDeTomasMouseClicked

    private void jtfBuscadorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfBuscadorKeyReleased
        buscando = true;
        controlador.buscar(jtfBuscador.getText(), cache, lista_auxiliar);
    }//GEN-LAST:event_jtfBuscadorKeyReleased

    private void jbtGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtGuardarActionPerformed

        if (!datosValidos()) {
            JOptionPane.showMessageDialog(this, "Datos No Validos", "Error al guardar", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String[] datos = _datos();
        datos = FormatoBD.bdEntrada(datos);
        boolean mov = operaciones.insertar(datos);
        mov(mov);
    }//GEN-LAST:event_jbtGuardarActionPerformed

    private void jbtActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtActualizarActionPerformed
        // TODO add your handling code here:
        if (tipo_de_toma_buscada == null) {
            JOptionPane.showMessageDialog(this, "Tipo de toma no seleccionada", "Error al eliminar", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!datosValidos()) {
            JOptionPane.showMessageDialog(this, "Datos No Validos", "Error al actualizar", JOptionPane.ERROR_MESSAGE);
            return;
        }

        //
        String[] datos = _datos();
        datos = FormatoBD.bdEntrada(datos);
        //
        String[] cam = ConstBD.BD_TIPOS_DE_TOMAS;
        cam = Arrays.copyOfRange(cam, 1, cam.length);
        boolean mov = operaciones.actualizar(cam, datos, "id = " + tipo_de_toma_buscada.getId());
        mov(mov);

    }//GEN-LAST:event_jbtActualizarActionPerformed

    private void jbtEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtEliminarActionPerformed
        if (tipo_de_toma_buscada == null) {
            JOptionPane.showMessageDialog(this, "Tipo de toma no seleccionada", "Error al eliminar", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!borrable(tipo_de_toma_buscada.getId())) {
            JOptionPane.showMessageDialog(this, "ESTA REGISTRO ESTA REFERENCIADO", "Error al eliminar", JOptionPane.ERROR_MESSAGE);
            return;
        }

        boolean mov = operaciones.eliminar("id = " + tipo_de_toma_buscada.getId());
        mov(mov);


    }//GEN-LAST:event_jbtEliminarActionPerformed

    private void jbtCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtCancelarActionPerformed
        int o = JOptionPane.showConfirmDialog(this, "¿Seguro de cancelar la operacion?", "Cancelar operacion", JOptionPane.INFORMATION_MESSAGE);
        if (o == JOptionPane.YES_OPTION) {
            estadoInicial();
        }
    }//GEN-LAST:event_jbtCancelarActionPerformed

    private void jtfCostoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfCostoKeyTyped
        if (jtfCosto.getText().length() >= 7) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_jtfCostoKeyTyped

    private void jtfRecargoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfRecargoKeyTyped
        if (jtfRecargo.getText().length() >= 7) {
            evt.consume();
            getToolkit().beep();
        }
    }//GEN-LAST:event_jtfRecargoKeyTyped

    private void jtfTipoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTipoKeyTyped
        if (jtfTipo.getText().length() >= 50) {
            evt.consume();
            getToolkit().beep();
        }

    }//GEN-LAST:event_jtfTipoKeyTyped

    void mov(boolean mov) {
        if (mov) {
            memoria_cache.actualizar();
            controlador.actualizarTabla();
            estadoInicial();
            JOptionPane.showConfirmDialog(this, "Operacion exitosa");
            return;
        }
        JOptionPane.showConfirmDialog(this, "Error");
    }

    String[] _datos() {
        return new String[]{
            jtfTipo.getText(),
            jtfCosto.getText(),
            jtfRecargo.getText()
        };
    }

    public boolean datosValidos() {
        JTextField[] arr = {
            jtfTipo, jtfCosto, jtfRecargo
        };

        for (JTextField i : arr) {
            if (!varibaleValida(i.getText())) {
                return false;
            }
        }
        if (!soloTexto(jtfTipo.getText())) {
            return false;
        }
        if (!soloNumeros(jtfCosto.getText())) {
            return false;
        }
        return soloNumeros(jtfRecargo.getText());

    }

    public boolean varibaleValida(String txt) {
        return txt != null && !txt.isEmpty();
    }

    public boolean soloTexto(String txt) {
        return txt.matches("( |[a-zA-Z]|[_ñÑáÁéÉíÍóÓúÚ]){1,50}");
    }

    public boolean soloNumeros(String txt) {
        return txt.matches("([0-9]{1,4})(|(\\.([0-9]{1,2})))");
    }

    public boolean borrable(String id) {
        Operaciones<OUsuarios> usuarios = FabricaOpraciones.USUARIOS;
        ArrayList<OUsuarios> lista = usuarios.getLista("toma = " + id);
        return lista.isEmpty();
    }

    @Override
    public void setVisible(boolean b) {
        super.setVisible(b);
        SwingUtilities.invokeLater(() -> controlador.cargarTabla());
    }

    @Override
    public void dispose() {
        super.dispose();
        cerrar();
    }

    public void cerrar() {
        SwingUtilities.invokeLater(() -> {
            controlador.vaciarTabla();
            estadoInicial();
        });
    }

// <editor-fold defaultstate="collapsed" desc="Variables del Formulario">     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtActualizar;
    private javax.swing.JButton jbtAnterior;
    private javax.swing.JButton jbtCancelar;
    private javax.swing.JButton jbtEliminar;
    private javax.swing.JButton jbtGuardar;
    private javax.swing.JButton jbtRecrgar;
    private javax.swing.JButton jbtSiguiente;
    private javax.swing.JTable jtTipoDeTomas;
    private javax.swing.JTextField jtfBuscador;
    private javax.swing.JTextField jtfCosto;
    private javax.swing.JTextField jtfRecargo;
    private javax.swing.JTextField jtfTipo;
    private javax.swing.JPanel panelCampos;
    private javax.swing.JPanel panel_Botones;
    private javax.swing.JPanel panel_der;
    private javax.swing.JPanel panel_izq;
    // End of variables declaration//GEN-END:variables

    //</editor-fold>   

    public DefaultTableModel getModelo_Tabla() {
        return modelo_tabla;
    }

}
