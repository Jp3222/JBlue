/*
 * Copyright (C) 2023 jp
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.jblue.vista.ventanas.herramientas;

import com.jblue.modelo.objetos.OUsuarios;
import com.jblue.sistema.app.AppProp;
import com.jblue.util.FuncJBlue;
import com.jblue.util.SoInfo;
import com.jblue.vista.jbmarco.VentanaSimple;
import com.jblue.vista.comp.CSelectorObjeto;
import com.jutil.soyjvm.So;
import java.awt.Desktop;
import java.awt.Dimension;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author jp
 */
public class MenuDocumentos extends VentanaSimple {

    private final JComponent[] componentes;
    private final JFileChooser file_chooser;
    private final DefaultListModel<String> modelo_lista;

    /**
     * Creates new form MenuDocumentos
     */
    public MenuDocumentos() {
        _TITULO = 11;
        this.file_chooser = new JFileChooser(SoInfo.RUTA_DOCUMENTOS);
        initComponents();
        componentes = new JComponent[]{
            agregar_doc,
            olvidar_doc,
            eliminar_doc,
            abrir_doc,
            crear_sub_dir,
            eliminar_dir
        };
        modelo_lista = new DefaultListModel<>();
        listaDocumentos.setModel(modelo_lista);
        llamable();
    }

    @Override
    protected final void llamable() {
        construirComponentes();
        componentesEstadoFinal();
        componentesEstadoInicial();
    }

    @Override
    protected void componentesEstadoFinal() {
        super.componentesEstadoFinal();
        file_chooser.setDialogType(JFileChooser.SAVE_DIALOG);
        file_chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        file_chooser.setMultiSelectionEnabled(false);
        file_chooser.setApproveButtonText("Guardar");
        file_chooser.setPreferredSize(new Dimension(600, 600));
        file_chooser.setSize(600, 600);
        file_chooser.addChoosableFileFilter(new FileNameExtensionFilter("JPG", ".jpg"));
        file_chooser.addChoosableFileFilter(new FileNameExtensionFilter("PNG", ".png"));
        file_chooser.addChoosableFileFilter(new FileNameExtensionFilter("DOCX", ".docx"));
        file_chooser.addChoosableFileFilter(new FileNameExtensionFilter("ODT", ".odt"));
    }

    @Override
    public void componentesEstadoInicial() {
        FuncJBlue.habilitarComponentes(false, componentes);
        usuario.setText(null);
        if (modelo_lista.getSize() > 0) {
            modelo_lista.clear();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_root = new javax.swing.JPanel();
        panel_super = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        usuario = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        panel_cen = new javax.swing.JPanel();
        panel_izq = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaDocumentos = new javax.swing.JList<>();
        panel_der = new javax.swing.JPanel();
        agregar_doc = new javax.swing.JButton();
        olvidar_doc = new javax.swing.JButton();
        eliminar_doc = new javax.swing.JButton();
        abrir_doc = new javax.swing.JButton();
        crear_sub_dir = new javax.swing.JButton();
        eliminar_dir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panel_root.setPreferredSize(new java.awt.Dimension(700, 500));
        panel_root.setLayout(new java.awt.BorderLayout(5, 5));

        panel_super.setPreferredSize(new java.awt.Dimension(700, 40));
        panel_super.setLayout(new java.awt.BorderLayout(5, 0));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Usuario");
        jLabel1.setPreferredSize(new java.awt.Dimension(200, 30));
        panel_super.add(jLabel1, java.awt.BorderLayout.LINE_START);

        usuario.setEditable(false);
        panel_super.add(usuario, java.awt.BorderLayout.CENTER);

        jButton1.setText("Seleccionar Usuario");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        panel_super.add(jButton1, java.awt.BorderLayout.LINE_END);

        panel_root.add(panel_super, java.awt.BorderLayout.PAGE_START);

        panel_cen.setPreferredSize(new java.awt.Dimension(700, 430));
        panel_cen.setLayout(new java.awt.BorderLayout(5, 0));

        panel_izq.setPreferredSize(new java.awt.Dimension(300, 630));
        panel_izq.setLayout(new java.awt.BorderLayout());

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Documentos de usuario");
        jLabel2.setPreferredSize(new java.awt.Dimension(300, 40));
        panel_izq.add(jLabel2, java.awt.BorderLayout.PAGE_START);

        jScrollPane1.setMinimumSize(new java.awt.Dimension(100, 100));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(300, 200));

        listaDocumentos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaDocumentos.setMaximumSize(new java.awt.Dimension(10000, 10000));
        listaDocumentos.setMinimumSize(new java.awt.Dimension(100, 100));
        listaDocumentos.setPreferredSize(new java.awt.Dimension(300, 300));
        jScrollPane1.setViewportView(listaDocumentos);

        panel_izq.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        panel_cen.add(panel_izq, java.awt.BorderLayout.CENTER);

        panel_der.setPreferredSize(new java.awt.Dimension(400, 630));
        panel_der.setLayout(new java.awt.GridLayout(8, 1, 5, 5));

        agregar_doc.setText("Agregar Documento");
        agregar_doc.setPreferredSize(new java.awt.Dimension(300, 40));
        agregar_doc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregar_docActionPerformed(evt);
            }
        });
        panel_der.add(agregar_doc);

        olvidar_doc.setText("Olvidar Documento");
        olvidar_doc.setPreferredSize(new java.awt.Dimension(300, 40));
        panel_der.add(olvidar_doc);

        eliminar_doc.setText("Eliminar Documento");
        eliminar_doc.setPreferredSize(new java.awt.Dimension(300, 40));
        eliminar_doc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminar_docActionPerformed(evt);
            }
        });
        panel_der.add(eliminar_doc);

        abrir_doc.setText("Abrir Documento");
        abrir_doc.setPreferredSize(new java.awt.Dimension(300, 40));
        abrir_doc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrir_docActionPerformed(evt);
            }
        });
        panel_der.add(abrir_doc);

        crear_sub_dir.setText("Crear sub carpeta");
        crear_sub_dir.setPreferredSize(new java.awt.Dimension(300, 40));
        panel_der.add(crear_sub_dir);

        eliminar_dir.setText("Eliminar sub carpeta");
        eliminar_dir.setPreferredSize(new java.awt.Dimension(300, 40));
        panel_der.add(eliminar_dir);

        panel_cen.add(panel_der, java.awt.BorderLayout.EAST);

        panel_root.add(panel_cen, java.awt.BorderLayout.CENTER);

        getContentPane().add(panel_root, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void agregar_docActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregar_docActionPerformed
        try {
            int button = file_chooser.showOpenDialog(this);
            if (button == JFileChooser.CANCEL_OPTION) {
                return;
            }
            File file = file_chooser.getSelectedFile();
            if (file == null || !file.exists()) {
                JOptionPane.showMessageDialog(this, "El archivo no es valido", "Seleccione Documento", JOptionPane.ERROR_MESSAGE);
                return;
            }
            File dir_us = AppProp.FIL_DIR_PROG_USUARIOS;
            String usu = usuario.getText().toUpperCase();
            StringBuilder sb = new StringBuilder(dir_us.getAbsolutePath());
            sb.append("/").append(usu).append("/").append(file.getName());
            File dir_out = new File(sb.toString());
            Files.copy(file.toPath(), new FileOutputStream(dir_out));
        } catch (IOException ex) {
            Logger.getLogger(MenuDocumentos.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_agregar_docActionPerformed

    private void abrir_docActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrir_docActionPerformed
        File dir_us = AppProp.FIL_DIR_PROG_USUARIOS;
        String usu = usuario.getText().toUpperCase();
        StringBuilder sb = new StringBuilder(dir_us.getAbsolutePath());
        sb.append("/").append(usu).append("/");
        file_chooser.setCurrentDirectory(new File(sb.toString()));
        int button = file_chooser.showOpenDialog(this);
        if (button == JFileChooser.CANCEL_OPTION) {
            return;
        }
        File file = file_chooser.getSelectedFile();
        if (file == null || !file.exists()) {
            JOptionPane.showMessageDialog(this, "El archivo no es valido", "Seleccione Documento", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            Desktop.getDesktop().open(file);
        } catch (IOException ex) {
            Logger.getLogger(MenuDocumentos.class.getName()).log(Level.SEVERE, null, ex);
        }
        file_chooser.setCurrentDirectory(new File(So.USER_HOME));
    }//GEN-LAST:event_abrir_docActionPerformed

    private void eliminar_docActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminar_docActionPerformed
        File dir_us = AppProp.FIL_DIR_PROG_USUARIOS;
        String usu = usuario.getText().toUpperCase();
        StringBuilder sb = new StringBuilder(dir_us.getAbsolutePath());
        sb.append("/").append(usu).append("/");
        file_chooser.setCurrentDirectory(new File(sb.toString()));
        int button = file_chooser.showOpenDialog(this);
        if (button == JFileChooser.CANCEL_OPTION) {
            return;
        }
        File file = file_chooser.getSelectedFile();
        if (file == null || !file.exists()) {
            JOptionPane.showMessageDialog(this, "El archivo no es valido", "Seleccione Documento", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (file.delete()) {
            JOptionPane.showMessageDialog(this, "Eliminacion Exitosas");
        }
        file_chooser.setCurrentDirectory(new File(So.USER_HOME));
    }//GEN-LAST:event_eliminar_docActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        OUsuarios o = CSelectorObjeto.selectorUsuarios(this);
        if (o == null) {
            return;
        }
        usuario.setText(o.getStringR());
        usuario_seleccionado = o;
        String fil_dir_prog_usuarios = AppProp.FIL_DIR_PROG_USUARIOS.getAbsolutePath();
        File f = new File(String.format("%s/%s", fil_dir_prog_usuarios, o.getStringR()));
        if (!f.exists()) {
            JOptionPane.showMessageDialog(this, "Este usuario no tiene un directorio");
            componentesEstadoInicial();
            return;
        }
        FuncJBlue.habilitarComponentes(true, componentes);
        modelo_lista.clear();
        for (String string : f.list()) {
            modelo_lista.addElement(string);
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abrir_doc;
    private javax.swing.JButton agregar_doc;
    private javax.swing.JButton crear_sub_dir;
    private javax.swing.JButton eliminar_dir;
    private javax.swing.JButton eliminar_doc;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listaDocumentos;
    private javax.swing.JButton olvidar_doc;
    private javax.swing.JPanel panel_cen;
    private javax.swing.JPanel panel_der;
    private javax.swing.JPanel panel_izq;
    private javax.swing.JPanel panel_root;
    private javax.swing.JPanel panel_super;
    private javax.swing.JTextField usuario;
    // End of variables declaration//GEN-END:variables
    private OUsuarios usuario_seleccionado;

    @Override
    public void dispose() {
        super.dispose(); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
        componentesEstadoInicial();
    }

}
