/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.jblue.vista.ventanas.bd;

import com.jblue.modelo.ConstBD;
import com.jblue.modelo.envoltorios.Operaciones;
import com.jblue.modelo.objetos.OTipoTomas;
import com.jblue.util.FormatoBD;
import com.jblue.util.cache.FabricaCache;
import com.jblue.util.cache.MemoCache;
import com.jblue.vista.conf.SuperVentana;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author jp
 */
public class MenuTipoTomas extends SuperVentana {

    private OTipoTomas tipo_de_toma_buscada;
    private final ArrayList<OTipoTomas> lista_auxiliar;
    private final MemoCache<OTipoTomas> memoria_cache;
    private final ArrayList<OTipoTomas> cache;
    private final Operaciones<OTipoTomas> operaciones;
    private boolean buscando;
    //
    private final DefaultTableModel modelo;

    //
    /**
     * Creates new form MenuTipoTomas
     */
    public MenuTipoTomas() {
        this.lista_auxiliar = new ArrayList<>();
        memoria_cache = FabricaCache.MC_TIPOS_DE_TOMAS;
        cache = memoria_cache.getLista();
        operaciones = FabricaCache.OP_TIPOS_DE_TOMAS;
        initComponents();
        modelo = (DefaultTableModel) jtTiposTomas.getModel();
        llamable();
    }

    @Override
    protected final void llamable() {
        estadoInicial();
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowActivated(WindowEvent e) {
                if (jpTiposTomas.isVisible()) {
                    cargarTabla();
                }
            }

            @Override
            public void windowClosed(WindowEvent e) {
                vaciarTabla();
            }

        });
    }

    @Override
    public void estadoInicial() {
        tipo_de_toma_buscada = null;
        lista_auxiliar.clear();
        jtfTipoTomaCosto.setText(null);
        jtfTipoTomaRecargo.setText(null);
        jtfTipoTomasBuscar.setText(null);
        jtfTipoTomasNombre.setText(null);
        jbtTTomasCancelar.setEnabled(true);
        botonesPrimarios();
    }

    void botonesPrimarios() {
        jbtTTomasActualizar.setEnabled(false);
        jbtTTomasEliminar.setEnabled(false);
        jbtTTomasGuardar.setEnabled(true);
    }

    void botonesSecundaris() {
        jbtTTomasActualizar.setEnabled(true);
        jbtTTomasEliminar.setEnabled(true);
        jbtTTomasGuardar.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpTiposTomas = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtTiposTomas = new javax.swing.JTable();
        jPanel12 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jtfTipoTomasNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jbtTTomasGuardar = new javax.swing.JButton();
        jbtTTomasActualizar = new javax.swing.JButton();
        jbtTTomasEliminar = new javax.swing.JButton();
        jbtTTomasCancelar = new javax.swing.JButton();
        jtfTipoTomaCosto = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jtfTipoTomaRecargo = new javax.swing.JTextField();
        jtfTipoTomasBuscar = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jtTiposTomas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "TIPO", "COSTO", "RECARGO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtTiposTomas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtTiposTomas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtTiposTomas.getTableHeader().setReorderingAllowed(false);
        jtTiposTomas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtTiposTomasMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jtTiposTomas);

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del tipo de toma"));
        jPanel12.setOpaque(false);

        jLabel3.setText("Nombre");

        jtfTipoTomasNombre.setPreferredSize(new java.awt.Dimension(23, 40));

        jLabel4.setText("Costo del tipo de toma");

        jbtTTomasGuardar.setText("Guardar");
        jbtTTomasGuardar.setPreferredSize(new java.awt.Dimension(70, 40));
        jbtTTomasGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtTTomasGuardarActionPerformed(evt);
            }
        });

        jbtTTomasActualizar.setText("Actualizar");
        jbtTTomasActualizar.setPreferredSize(new java.awt.Dimension(70, 40));
        jbtTTomasActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtTTomasActualizarActionPerformed(evt);
            }
        });

        jbtTTomasEliminar.setText("Eliminar");
        jbtTTomasEliminar.setPreferredSize(new java.awt.Dimension(70, 40));
        jbtTTomasEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtTTomasEliminarActionPerformed(evt);
            }
        });

        jbtTTomasCancelar.setText("Cancelar");
        jbtTTomasCancelar.setPreferredSize(new java.awt.Dimension(70, 40));
        jbtTTomasCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtTTomasCancelarActionPerformed(evt);
            }
        });

        jtfTipoTomaCosto.setPreferredSize(new java.awt.Dimension(23, 40));

        jLabel12.setText("Costo del Recargo");

        jtfTipoTomaRecargo.setPreferredSize(new java.awt.Dimension(23, 40));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtfTipoTomasNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                    .addComponent(jbtTTomasGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtTTomasActualizar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtTTomasEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jbtTTomasCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jtfTipoTomaCosto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 481, Short.MAX_VALUE)
                    .addComponent(jtfTipoTomaRecargo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfTipoTomasNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfTipoTomaCosto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfTipoTomaRecargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jbtTTomasGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtTTomasActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtTTomasEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtTTomasCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(91, Short.MAX_VALUE))
        );

        jtfTipoTomasBuscar.setPreferredSize(new java.awt.Dimension(85, 35));
        jtfTipoTomasBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfTipoTomasBuscarKeyReleased(evt);
            }
        });

        jLabel18.setText("Nombre");
        jLabel18.setPreferredSize(new java.awt.Dimension(100, 35));

        javax.swing.GroupLayout jpTiposTomasLayout = new javax.swing.GroupLayout(jpTiposTomas);
        jpTiposTomas.setLayout(jpTiposTomasLayout);
        jpTiposTomasLayout.setHorizontalGroup(
            jpTiposTomasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpTiposTomasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpTiposTomasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 482, Short.MAX_VALUE)
                    .addGroup(jpTiposTomasLayout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfTipoTomasBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jpTiposTomasLayout.setVerticalGroup(
            jpTiposTomasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTiposTomasLayout.createSequentialGroup()
                .addGroup(jpTiposTomasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpTiposTomasLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jpTiposTomasLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(jpTiposTomasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfTipoTomasBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1027, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jpTiposTomas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 609, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jpTiposTomas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jtfTipoTomasBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfTipoTomasBuscarKeyReleased
        buscando = true;
        vaciarTabla();
        lista_auxiliar.clear();
        String texto_buscado = jtfTipoTomasBuscar.getText();
        texto_buscado = limpiar(texto_buscado);
        for (OTipoTomas oTipoTomas : cache) {
            String aux = limpiar(oTipoTomas.getTipo());
            if (aux.contains(texto_buscado)) {
                modelo.addRow(oTipoTomas.getInfo());
                lista_auxiliar.add(oTipoTomas);
            }
        }
    }//GEN-LAST:event_jtfTipoTomasBuscarKeyReleased

    private void jbtTTomasGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtTTomasGuardarActionPerformed
        if (!validar()) {
            JOptionPane.showMessageDialog(this, "Error de operacion", "Inserccion de elemento", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String[] arr = getInfo();
        arr = FormatoBD.bdEntrada(arr);
        operaciones.insertar(arr);
        memoria_cache.actualizar();
        actualizarTabla();
        estadoInicial();
    }//GEN-LAST:event_jbtTTomasGuardarActionPerformed

    private void jbtTTomasActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtTTomasActualizarActionPerformed
        if (!validar()) {
            JOptionPane.showMessageDialog(this, "Error de operacion", "Inserccion de elemento", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String[] arr = getInfo();
        arr = FormatoBD.bdEntrada(arr);
        String[] camp = ConstBD.BD_TIPOS_DE_TOMAS;
        camp = Arrays.copyOfRange(camp, 1, camp.length);
        operaciones.actualizar(camp, arr, "id = " + tipo_de_toma_buscada.getId());
        memoria_cache.actualizar();
        actualizarTabla();
        estadoInicial();

    }//GEN-LAST:event_jbtTTomasActualizarActionPerformed

    private void jbtTTomasEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtTTomasEliminarActionPerformed
        if (tipo_de_toma_buscada == null) {
            JOptionPane.showMessageDialog(this, "Error de operacion", "Inserccion de elemento", JOptionPane.ERROR_MESSAGE);
            return;
        }
        operaciones.eliminar("id = " + tipo_de_toma_buscada.getId());
        memoria_cache.actualizar();
        actualizarTabla();
        estadoInicial();

    }//GEN-LAST:event_jbtTTomasEliminarActionPerformed

    private void jbtTTomasCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtTTomasCancelarActionPerformed
        int opcion = JOptionPane.showConfirmDialog(this, "¿Seguro que desea cancelar la operacion?", "Cancelar operacion", JOptionPane.YES_OPTION, JOptionPane.INFORMATION_MESSAGE);
        if (opcion == JOptionPane.YES_OPTION) {
            estadoInicial();
        }
    }//GEN-LAST:event_jbtTTomasCancelarActionPerformed

    private void jtTiposTomasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtTiposTomasMouseClicked
        int clicks = evt.getClickCount();
        ArrayList<OTipoTomas> lista_aux;

        if (buscando) {
            lista_aux = lista_auxiliar;
        } else {
            lista_aux = cache;
        }
        tipo_de_toma_buscada = lista_aux.get(jtTiposTomas.getSelectedRow());
        switch (clicks) {
            case 1:
                jtfTipoTomasBuscar.setText(tipo_de_toma_buscada.getTipo());
                break;
            case 2:
                jtfTipoTomaCosto.setText(tipo_de_toma_buscada.getCosto() + "");
                jtfTipoTomaRecargo.setText(tipo_de_toma_buscada.getRecargo() + "");
                jtfTipoTomasNombre.setText(tipo_de_toma_buscada.getTipo());
                //
                actualizarTabla();
                //
                botonesSecundaris();
                //
                if (buscando) {
                    buscando = false;
                }
                break;
        }


    }//GEN-LAST:event_jtTiposTomasMouseClicked

    String limpiar(String txt) {
        return txt.trim().replace(" ", "").toUpperCase();
    }

    void cargarTabla() {
        for (OTipoTomas oTipoTomas : cache) {
            modelo.addRow(oTipoTomas.getInfo());
        }
    }

    void vaciarTabla() {
        while (modelo.getRowCount() > 0) {
            modelo.removeRow(0);
        }
    }

    void actualizarTabla() {
        vaciarTabla();
        cargarTabla();
    }

    boolean validar() {
        JTextField[] com = {
            jtfTipoTomasNombre, jtfTipoTomaCosto, jtfTipoTomaRecargo
        };
        for (JTextField o : com) {
            if (!StringValido(o.getText())) {
                return false;
            }
        }
        for (int i = 1; i < com.length; i++) {
            String aux = com[i].getText();
            if (!soloNumeros(aux)) {
                return false;
            }
        }
        return true;
    }

    String[] getInfo() {
        return new String[]{
            jtfTipoTomasNombre.getText(),
            jtfTipoTomaCosto.getText(),
            jtfTipoTomaRecargo.getText()
        };
    }

    boolean StringValido(String txt) {
        return txt != null && !txt.isEmpty();
    }

    boolean soloNumeros(String txt) {
        return txt.matches("[0-9]*");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton jbtTTomasActualizar;
    private javax.swing.JButton jbtTTomasCancelar;
    private javax.swing.JButton jbtTTomasEliminar;
    private javax.swing.JButton jbtTTomasGuardar;
    private javax.swing.JPanel jpTiposTomas;
    private javax.swing.JTable jtTiposTomas;
    private javax.swing.JTextField jtfTipoTomaCosto;
    private javax.swing.JTextField jtfTipoTomaRecargo;
    private javax.swing.JTextField jtfTipoTomasBuscar;
    private javax.swing.JTextField jtfTipoTomasNombre;
    // End of variables declaration//GEN-END:variables

}
