/*
 * Copyright (C) 2023 jp
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.jblue.vista.vistas.usuarios;

import com.jblue.util.trash.Operaciones;
import com.jblue.util.tools.UtilUsuario;
import com.jblue.modelo.objetos.OCalles;
import com.jblue.modelo.objetos.OPagosServicio;
import com.jblue.modelo.objetos.OTipoTomas;
import com.jblue.modelo.objetos.OUsuarios;
import com.jblue.modelo.absobj.Objeto;
import com.jblue.modelo.cache.MemoListCache;
import com.jblue.modelo.dbconexion.FuncionesBD;
import com.jblue.util.Filtros;
import com.jblue.util.FormatoBD;
import com.jblue.modelo.factories.FabricaCache;
import com.jblue.modelo.factories.FabricaFuncionesBD;
import com.jblue.modelo.factories.FabricaOpraciones;
import com.jblue.util.tiempo.Fecha;
import com.jblue.vista.marco.contruccion.EvtRegistrosBD;
import com.jblue.vista.marco.contruccion.FunMovCache;
import com.jblue.vista.marco.vistas.VistaSimple;
import com.jblue.vista.vistas.VUsuarios;
import java.awt.event.ItemEvent;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import java.util.function.Predicate;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author jp
 */
public class VUsuariosR extends VistaSimple implements EvtRegistrosBD, FunMovCache {

    private final JTextField[] arr_campos_texto;

    /**
     * Creates new form VUsuarios
     *
     * @param root
     */
    public VUsuariosR(VUsuarios root) {
        initComponents();
        memoria_cache = FabricaCache.USUARIOS;
        modelo_lista = new DefaultListModel<>();
        jlUsuarios.setModel(modelo_lista);

        arr_campos_texto = new JTextField[]{
            campo_nombre,
            campo_ap,
            campo_am
        };
        llamable();
    }

    @Override
    protected final void llamable() {
        construirComponentes();
        componentesEstadoFinal();
        componentesEstadoInicial();
        eventos();
    }

    @Override
    protected void componentesEstadoFinal() {

    }

    @Override
    public void componentesEstadoInicial() {
        if (!modelo_lista.isEmpty()) {
            modelo_lista.clear();
        }
        for (JTextField i : arr_campos_texto) {
            i.setText(null);
        }

        campo_titular.setEnabled(false);
        campo_no_casa.setText(null);
        campo_is_titular.setSelected(false);

    }

    @Override
    protected void eventos() {
        campo_is_usuario.addItemListener(e -> evtItem(e));
        campo_is_titular.addItemListener(e -> evtItem(e));
        btn_guardar.addActionListener(e -> evtGuardar());
        btn_eliminar.addActionListener(e -> evtEliminar());
        btn_actualizar.addActionListener(e -> evtActualizar());
        btn_cancelar.addActionListener(e -> evtCancelar());
    }

    private void evtItem(ItemEvent e) {
        JCheckBox item = (JCheckBox) e.getSource();
        if (item == campo_is_usuario && campo_is_usuario.isSelected()) {
            campo_is_titular.setSelected(!campo_is_usuario.isSelected());
            campo_titular.setVisible(campo_is_usuario.isSelected());
            campo_titular.setEnabled(campo_is_usuario.isSelected());
        } else if (item == campo_is_titular && campo_is_titular.isSelected()) {
            campo_is_usuario.setSelected(!campo_is_titular.isSelected());
            campo_titular.setVisible(!campo_is_titular.isSelected());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel_izq = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        buscado_lista = new javax.swing.JTextField();
        solo_activos = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlUsuarios = new javax.swing.JList<>();
        panel_der = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        panelCampos = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        campo_nombre = new javax.swing.JTextField();
        coincidencias = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel35 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        campo_ap = new javax.swing.JTextField();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        campo_am = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        campo_is_titular = new javax.swing.JCheckBox();
        campo_is_usuario = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        campo_titular = new javax.swing.JComboBox<>();
        jPanel16 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        man_titular_asociado = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        campo_tipo_toma = new javax.swing.JComboBox<>();
        man_tipo_toma = new javax.swing.JCheckBox();
        jPanel8 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        campo_calle = new javax.swing.JComboBox<>();
        man_calle = new javax.swing.JCheckBox();
        jPanel18 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        campo_no_casa = new javax.swing.JTextField();
        sn_numero = new javax.swing.JCheckBox();
        jPanel10 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        campo_estado = new javax.swing.JComboBox<>();
        man_estado = new javax.swing.JCheckBox();
        panelBotones = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        btn_guardar = new javax.swing.JButton();
        btn_actualizar = new javax.swing.JButton();
        btn_eliminar = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();

        setName("Registro de Usuarios"); // NOI18N
        setLayout(new java.awt.BorderLayout());

        panel_izq.setPreferredSize(new java.awt.Dimension(500, 670));
        panel_izq.setLayout(new java.awt.BorderLayout(0, 10));

        jPanel12.setPreferredSize(new java.awt.Dimension(500, 45));
        jPanel12.setLayout(new java.awt.BorderLayout(10, 0));

        buscado_lista.setPreferredSize(new java.awt.Dimension(500, 30));
        buscado_lista.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                buscado_listaKeyReleased(evt);
            }
        });
        jPanel12.add(buscado_lista, java.awt.BorderLayout.CENTER);

        solo_activos.setText("Activos");
        solo_activos.setPreferredSize(new java.awt.Dimension(100, 22));
        jPanel12.add(solo_activos, java.awt.BorderLayout.EAST);

        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jblue/media/img/x24/buscar.png"))); // NOI18N
        jLabel7.setPreferredSize(new java.awt.Dimension(30, 30));
        jPanel12.add(jLabel7, java.awt.BorderLayout.LINE_START);

        jLabel18.setPreferredSize(new java.awt.Dimension(500, 10));
        jPanel12.add(jLabel18, java.awt.BorderLayout.PAGE_START);

        panel_izq.add(jPanel12, java.awt.BorderLayout.NORTH);

        jScrollPane1.setPreferredSize(new java.awt.Dimension(500, 600));

        jlUsuarios.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jlUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jlUsuariosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jlUsuarios);

        panel_izq.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        add(panel_izq, java.awt.BorderLayout.WEST);

        panel_der.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setMinimumSize(new java.awt.Dimension(500, 300));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(500, 700));

        jPanel3.setPreferredSize(new java.awt.Dimension(500, 600));
        jPanel3.setLayout(new java.awt.BorderLayout());

        panelCampos.setPreferredSize(new java.awt.Dimension(500, 600));
        panelCampos.setLayout(new java.awt.BorderLayout());

        jPanel2.setPreferredSize(new java.awt.Dimension(500, 150));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel15.setLayout(new java.awt.GridLayout(2, 0));

        jPanel4.setLayout(new java.awt.BorderLayout());

        jLabel2.setText("Nombre: ");
        jLabel2.setMaximumSize(new java.awt.Dimension(60, 20));
        jLabel2.setPreferredSize(new java.awt.Dimension(100, 25));
        jPanel4.add(jLabel2, java.awt.BorderLayout.NORTH);

        campo_nombre.setToolTipText("<html>\nCampo: Nombre\n<br>valores admitidos: Solo texto\n<br>tamaño maximo: 32 Caracteres");
        campo_nombre.setName("Nombre"); // NOI18N
        campo_nombre.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel4.add(campo_nombre, java.awt.BorderLayout.CENTER);

        coincidencias.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        coincidencias.setText("0");
        coincidencias.setToolTipText("<html>\n<h1> Numero de coincidencias.</h1>\n<br>\n<p> Este campos e activa con un espacio.<br> y toma encuenta las coincidencias del nombre, apellido paterno y apellido materno</p>");
        coincidencias.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel4.add(coincidencias, java.awt.BorderLayout.EAST);

        jPanel15.add(jPanel4);

        jPanel5.setPreferredSize(new java.awt.Dimension(500, 50));
        jPanel5.setLayout(new java.awt.GridLayout(1, 2));

        jPanel35.setPreferredSize(new java.awt.Dimension(250, 30));
        jPanel35.setLayout(new java.awt.BorderLayout());

        jLabel3.setText("A. Paterno: ");
        jLabel3.setPreferredSize(new java.awt.Dimension(100, 25));
        jPanel35.add(jLabel3, java.awt.BorderLayout.NORTH);

        campo_ap.setToolTipText("<html>\nCampos: Apellido Paterno\n<br>Valor: Solo texto \n<br>Longitud: 32 Caracteres");
        campo_ap.setName("A. Paterno"); // NOI18N
        campo_ap.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel35.add(campo_ap, java.awt.BorderLayout.CENTER);

        jPanel5.add(jPanel35);

        jPanel6.setPreferredSize(new java.awt.Dimension(250, 30));
        jPanel6.setLayout(new java.awt.BorderLayout());

        jLabel4.setText("A. Materno:");
        jLabel4.setPreferredSize(new java.awt.Dimension(100, 25));
        jPanel6.add(jLabel4, java.awt.BorderLayout.NORTH);

        campo_am.setToolTipText("<html> Campos: Apellido Materno\n<br>Valor: Solo texto <br>Longitud: 32 Caracteres");
        campo_am.setName("A. Materno"); // NOI18N
        campo_am.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel6.add(campo_am, java.awt.BorderLayout.CENTER);

        jPanel5.add(jPanel6);

        jPanel15.add(jPanel5);

        jPanel2.add(jPanel15, java.awt.BorderLayout.CENTER);

        jPanel9.setLayout(new java.awt.GridLayout(1, 2));

        campo_is_titular.setText("Titutlar");
        campo_is_titular.setToolTipText("Mantener el roll del usuario, seleccionado");
        campo_is_titular.setPreferredSize(new java.awt.Dimension(500, 30));
        jPanel9.add(campo_is_titular);

        campo_is_usuario.setText("usuario");
        jPanel9.add(campo_is_usuario);

        jPanel2.add(jPanel9, java.awt.BorderLayout.SOUTH);

        panelCampos.add(jPanel2, java.awt.BorderLayout.NORTH);

        jPanel1.setLayout(new java.awt.GridLayout(6, 0));

        jPanel11.setPreferredSize(new java.awt.Dimension(500, 50));
        jPanel11.setLayout(new java.awt.BorderLayout());

        jLabel9.setText("T. asociado");
        jLabel9.setPreferredSize(new java.awt.Dimension(100, 25));
        jPanel11.add(jLabel9, java.awt.BorderLayout.NORTH);

        campo_titular.setName("Titular Asociado"); // NOI18N
        campo_titular.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel11.add(campo_titular, java.awt.BorderLayout.CENTER);

        jPanel16.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel16.setLayout(new java.awt.GridLayout(1, 2));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jblue/media/img/x24/buscar.png"))); // NOI18N
        jPanel16.add(jButton1);

        man_titular_asociado.setText("M.");
        man_titular_asociado.setToolTipText("Mantener el titular seleccionado");
        man_titular_asociado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        man_titular_asociado.setPreferredSize(new java.awt.Dimension(60, 30));
        jPanel16.add(man_titular_asociado);

        jPanel11.add(jPanel16, java.awt.BorderLayout.EAST);

        jPanel1.add(jPanel11);

        jPanel7.setPreferredSize(new java.awt.Dimension(500, 50));
        jPanel7.setLayout(new java.awt.BorderLayout());

        jLabel5.setText("T. Toma");
        jLabel5.setPreferredSize(new java.awt.Dimension(100, 25));
        jPanel7.add(jLabel5, java.awt.BorderLayout.NORTH);

        campo_tipo_toma.setName("Tipo de toma"); // NOI18N
        campo_tipo_toma.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel7.add(campo_tipo_toma, java.awt.BorderLayout.CENTER);

        man_tipo_toma.setText("M.");
        man_tipo_toma.setToolTipText("Mantener el tipo de toma seleccionado");
        man_tipo_toma.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        man_tipo_toma.setPreferredSize(new java.awt.Dimension(60, 30));
        jPanel7.add(man_tipo_toma, java.awt.BorderLayout.EAST);

        jPanel1.add(jPanel7);

        jPanel8.setPreferredSize(new java.awt.Dimension(500, 50));
        jPanel8.setLayout(new java.awt.BorderLayout());

        jLabel6.setText("Calle: ");
        jLabel6.setPreferredSize(new java.awt.Dimension(100, 25));
        jPanel8.add(jLabel6, java.awt.BorderLayout.NORTH);

        campo_calle.setName("Calle"); // NOI18N
        campo_calle.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel8.add(campo_calle, java.awt.BorderLayout.CENTER);

        man_calle.setText("M.");
        man_calle.setToolTipText("Mantener la calle seleccionada\n");
        man_calle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        man_calle.setPreferredSize(new java.awt.Dimension(60, 30));
        jPanel8.add(man_calle, java.awt.BorderLayout.EAST);

        jPanel1.add(jPanel8);

        jPanel18.setPreferredSize(new java.awt.Dimension(500, 50));
        jPanel18.setLayout(new java.awt.BorderLayout());

        jLabel1.setText("N. Casa");
        jLabel1.setPreferredSize(new java.awt.Dimension(100, 25));
        jPanel18.add(jLabel1, java.awt.BorderLayout.NORTH);

        campo_no_casa.setToolTipText("<html> Campo: Numero de casa  <br>Valor: Solo numeros <br>Longitud: 3 Caracteres");
        campo_no_casa.setName("Numero de Casa"); // NOI18N
        campo_no_casa.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel18.add(campo_no_casa, java.awt.BorderLayout.CENTER);

        sn_numero.setText("S/N");
        sn_numero.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        sn_numero.setPreferredSize(new java.awt.Dimension(60, 30));
        jPanel18.add(sn_numero, java.awt.BorderLayout.EAST);

        jPanel1.add(jPanel18);

        jPanel10.setPreferredSize(new java.awt.Dimension(500, 50));
        jPanel10.setLayout(new java.awt.BorderLayout());

        jLabel8.setText("Estado: ");
        jLabel8.setPreferredSize(new java.awt.Dimension(100, 25));
        jPanel10.add(jLabel8, java.awt.BorderLayout.NORTH);

        campo_estado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona Elemento.", "Activo.", "Inactivo.", "Baja." }));
        campo_estado.setName("Estado"); // NOI18N
        campo_estado.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel10.add(campo_estado, java.awt.BorderLayout.CENTER);

        man_estado.setText("M.");
        man_estado.setToolTipText("Mantener el estado del usuario seleccionado\n");
        man_estado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        man_estado.setPreferredSize(new java.awt.Dimension(60, 30));
        jPanel10.add(man_estado, java.awt.BorderLayout.EAST);

        jPanel1.add(jPanel10);

        panelCampos.add(jPanel1, java.awt.BorderLayout.CENTER);

        jPanel3.add(panelCampos, java.awt.BorderLayout.CENTER);

        panelBotones.setPreferredSize(new java.awt.Dimension(500, 100));
        panelBotones.setLayout(new java.awt.GridLayout(2, 0));

        jPanel13.setPreferredSize(new java.awt.Dimension(500, 40));
        jPanel13.setLayout(new java.awt.GridLayout(1, 3));

        btn_guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jblue/media/img/x32/disquete.png"))); // NOI18N
        btn_guardar.setText("Guardar");
        btn_guardar.setPreferredSize(new java.awt.Dimension(166, 40));
        jPanel13.add(btn_guardar);

        btn_actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jblue/media/img/x32/actualizar.png"))); // NOI18N
        btn_actualizar.setText("Actualizar");
        btn_actualizar.setPreferredSize(new java.awt.Dimension(166, 40));
        jPanel13.add(btn_actualizar);

        btn_eliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jblue/media/img/x32/eliminar.png"))); // NOI18N
        btn_eliminar.setText("Eliminar");
        btn_eliminar.setPreferredSize(new java.awt.Dimension(166, 40));
        jPanel13.add(btn_eliminar);

        panelBotones.add(jPanel13);

        btn_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/jblue/media/img/x32/cerca.png"))); // NOI18N
        btn_cancelar.setText("Cancelar");
        btn_cancelar.setPreferredSize(new java.awt.Dimension(500, 40));
        panelBotones.add(btn_cancelar);

        jPanel3.add(panelBotones, java.awt.BorderLayout.SOUTH);

        jScrollPane2.setViewportView(jPanel3);

        panel_der.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        add(panel_der, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void buscado_listaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_buscado_listaKeyReleased
        String y = Filtros.limpiar(buscado_lista.getText());
        if (y == null || y.isBlank()) {
            modelo_lista.clear();
            return;
        }
        String txt = Filtros.limpiar(buscado_lista.getText());
        List<OUsuarios> list = memoria_cache.getList((t) -> Filtros.limpiar(t.toString()).contains(txt));
        pintarLista(modelo_lista, list);
    }//GEN-LAST:event_buscado_listaKeyReleased

    private void setObjeto(int index) {
        if (index < 0 || index >= modelo_lista.size()) {
            return;
        }
        objeto_buscado = modelo_lista.get(index);
        buscado_lista.setText(null);
        jlUsuarios.clearSelection();
    }

    private boolean objetoValido() {
        int i = jlUsuarios.getSelectedIndex();
        setObjeto(i);
        return objeto_buscado != null;
    }

    private void jlUsuariosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jlUsuariosMouseClicked
        if (evt.getClickCount() < 2) {
            return;
        }

        if (!objetoValido()) {
            return;
        }
        setInfoEnPantalla(objeto_buscado);

    }//GEN-LAST:event_jlUsuariosMouseClicked

    private void setInfoEnPantalla(OUsuarios o) {
        campo_nombre.setText(o.getNombre());
        campo_ap.setText(o.getAp());
        campo_am.setText(o.getAm());
        campo_is_titular.setSelected(o.isTitular());
        campo_is_usuario.setSelected(!o.isTitular());
        if (!o.isTitular()) {
            var lista = memoria_cache.getList().stream().filter((t) -> t.getTipo().equalsIgnoreCase(o.getTipo())).toList();
            campo_titular.setSelectedItem(lista.get(0).toString());
        }
        var calle = UtilUsuario.getCalle(o.getCalle());
        campo_calle.setSelectedItem(calle.toString());
        var tipotoma = UtilUsuario.getTipoToma(o.getToma());
        campo_tipo_toma.setSelectedItem(tipotoma.toString());
        campo_no_casa.setText(o.getNumeroCasa());

    }

    private void buscador(ArrayList<OUsuarios> lista, ArrayList<OUsuarios> lista_aux, Predicate<OUsuarios> filtro) {
        lista_aux.clear();
        List<OUsuarios> toList = lista.stream().filter(filtro).toList();
        for (OUsuarios i : toList) {
            lista_aux.add(i);
        }
    }

    private void pintarLista(final DefaultListModel<OUsuarios> modelo, List<OUsuarios> lista) {
        modelo.clear();
        if (lista.isEmpty()) {
            return;
        }
        modelo.setSize(lista.size());
        int x = 0;
        for (OUsuarios i : lista) {
            modelo.add(x, i);
            x++;
        }
    }

// <editor-fold defaultstate="collapsed" desc="Variables de codigo">
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_actualizar;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JButton btn_guardar;
    private javax.swing.JTextField buscado_lista;
    private javax.swing.JTextField campo_am;
    private javax.swing.JTextField campo_ap;
    private javax.swing.JComboBox<OCalles> campo_calle;
    private javax.swing.JComboBox<String> campo_estado;
    private javax.swing.JCheckBox campo_is_titular;
    private javax.swing.JCheckBox campo_is_usuario;
    private javax.swing.JTextField campo_no_casa;
    private javax.swing.JTextField campo_nombre;
    private javax.swing.JComboBox<OTipoTomas> campo_tipo_toma;
    private javax.swing.JComboBox<OUsuarios> campo_titular;
    private javax.swing.JLabel coincidencias;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<OUsuarios> jlUsuarios;
    private javax.swing.JCheckBox man_calle;
    private javax.swing.JCheckBox man_estado;
    private javax.swing.JCheckBox man_tipo_toma;
    private javax.swing.JCheckBox man_titular_asociado;
    private javax.swing.JPanel panelBotones;
    private javax.swing.JPanel panelCampos;
    private javax.swing.JPanel panel_der;
    private javax.swing.JPanel panel_izq;
    private javax.swing.JCheckBox sn_numero;
    private javax.swing.JCheckBox solo_activos;
    // End of variables declaration//GEN-END:variables
    private final MemoListCache<OUsuarios> memoria_cache;
    private final DefaultListModel<OUsuarios> modelo_lista;
    private OUsuarios objeto_buscado;

// </editor-fold>
// <editor-fold defaultstate="collapsed" desc="CRUD de usuarios">
    @Override
    public void evtGuardar() {
        if (!camposValidos()) {
            return;
        }
        String[] valores = getInfo(false);

        String txt = "(";
        for (String i : valores) {
            txt = txt.concat(i).concat(",");
        }
        txt = txt.concat(")");
        System.out.println(txt);

        Operaciones<OUsuarios> op = FabricaOpraciones.getUSUARIOS();
        boolean insertar = op.insert(valores);
        actualizarCache(insertar);
    }

    @Override
    public void evtActualizar() {
        if (!camposValidos()) {
            return;
        }
        String[] valores = getInfo(false);

        String txt = "(";
        for (String i : valores) {
            txt = txt.concat(i).concat(",");
        }
        txt = txt.concat(")");
        System.out.println(txt);

        Operaciones<OUsuarios> op = FabricaOpraciones.getUSUARIOS();
        boolean insertar = op.actualizar(null,
                valores,
                "id = " + objeto_buscado.getId());
        actualizarCache(true);
    }

    @Override
    public void evtEliminar() {
        int input = JOptionPane.showConfirmDialog(this, "¿Desea eliminar esta registro?");
        if (input != JOptionPane.YES_OPTION) {
            return;
        }
        Operaciones<OPagosServicio> pxs = FabricaOpraciones.getPAGOS_X_SERVICIO();
        ArrayList<OPagosServicio> lista = pxs.getLista(
                String.format("usuario = '%s'", objeto_buscado.getId())
        );
        if (!lista.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Este registro no se puede eliminar");
            return;
        }
        FuncionesBD<OUsuarios> operaciones = FabricaFuncionesBD.getUsuarios();
        operaciones.delete("id = " + objeto_buscado.getId());
    }

    @Override
    public void evtCancelar() {
        boolean cancelar = evtCancelar(this);
        if (!cancelar) {
            return;
        }
        componentesEstadoInicial();
    }

    @Override
    public void evtBuscar() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public String[] getInfo(boolean actualizacion) {
        String nombre = campo_nombre.getText();
        String ap = campo_ap.getText();
        String am = campo_am.getText();
        String calle = campo_calle.getItemAt(campo_calle.getSelectedIndex()).getId();
        String no_casa = campo_no_casa.getText();
        no_casa = no_casa == null ? "NULL" : no_casa;

        String tipo_toma = campo_tipo_toma.getItemAt(campo_tipo_toma.getSelectedIndex()).getId();
        String registro;

        if (actualizacion) {
            registro = objeto_buscado.getRegistro();
        } else {
            LocalDate ld = LocalDate.now();
            registro = ld.format(Fecha.FORMATO);
        }
        String estado = campo_estado.getSelectedIndex() == 1 ? "1" : "-1";
        String titular = null;

        if (campo_is_titular.isSelected()) {
            titular = "-1";
        } else if (campo_is_usuario.isSelected() && campo_titular.getSelectedIndex() == 0) {
            titular = "-2";
        } else if (campo_is_usuario.isSelected()) {
            OUsuarios usuario = campo_titular.getItemAt(campo_titular.getSelectedIndex());
            titular = usuario.getId();
        }

        String codigo = "NULL";
        String[] arr = new String[]{
            nombre, ap, am, calle, no_casa, tipo_toma, registro, estado, titular, codigo
        };
        arr = FormatoBD.bdEntrada(arr);
        return arr;
    }

    @Override
    public boolean camposValidos() {
        return validarTextFields() && valirarComboBox();
    }

    private boolean validarTextFields() {
        String aux;
        for (JTextField i : arr_campos_texto) {
            aux = i.getText();
            if (Filtros.isNullOrBlank(aux)) {
                JOptionPane.showMessageDialog(this, String.format("Campo %s no valido", i.getName()));
                return false;
            }
        }
        return true;
    }

    private boolean valirarComboBox() {
        if (campo_estado.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, String.format("Campo %s no valido", campo_estado.getName()));
            return false;
        }
        return true;
    }
// </editor-fold>

// <editor-fold defaultstate="collapsed" desc="descripcion">
// </editor-fold>
    @Override
    public void setVisible(boolean flag) {
        super.setVisible(flag); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
        if (flag) {
            cargarCampos();
        } else {
            vaciarCampos();
        }
    }

    private void cargarCampos() {
        List<OUsuarios> titulares = FabricaCache.MC_USUARIOS.getLista().stream().filter(u -> u.isTitular()).toList();
        for (OUsuarios i : titulares) {
            campo_titular.addItem(i);
        }
        ArrayList<OTipoTomas> b = FabricaCache.MC_TIPOS_DE_TOMAS.getLista();
        for (OTipoTomas i : b) {
            campo_tipo_toma.addItem(i);
        }
        ArrayList<OCalles> c = FabricaCache.MC_CALLES.getLista();
        for (OCalles i : c) {
            campo_calle.addItem(i);
        }
    }

    private void vaciarCampos() {
        if (campo_titular.getItemCount() > 0) {
            campo_titular.removeAllItems();
        }
        if (campo_calle.getItemCount() > 0) {
            campo_calle.removeAllItems();
        }
        if (campo_tipo_toma.getItemCount() > 0) {
            campo_tipo_toma.removeAllItems();
        }

    }

    private <T extends Objeto> void pintarJCBX(JComboBox<String> txt, List<T> lista) {
        txt.addItem("Seleccione Elemento");
        for (Objeto i : lista) {
            txt.addItem(i.toString());
        }
    }

    @Override
    public void actualizarCache(boolean actualizar) {
        if (!actualizar) {
            return;
        }
        memoria_cache.reLoadData();
        campo_titular.removeAllItems();
        memoria_cache.getList().forEach((t) -> {
            campo_titular.addItem(t);
        });
        componentesEstadoInicial();
    }

}
