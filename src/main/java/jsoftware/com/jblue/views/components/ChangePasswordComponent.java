/*
 * Copyright (C) 2025 juanp
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package jsoftware.com.jblue.views.components;

import jsoftware.com.jblue.model.DBConnection;
import jsoftware.com.jblue.model.factories.ConnectionFactory;
import jsoftware.com.jblue.model.dtos.OUser;
import jsoftware.com.jblue.util.EncriptadoAES;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.UnsupportedEncodingException;
import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.BadPaddingException;
import javax.crypto.IllegalBlockSizeException;
import javax.crypto.NoSuchPaddingException;
import javax.swing.AbstractAction;
import javax.swing.ActionMap;
import javax.swing.InputMap;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;

/**
 *
 * @author juanp
 */
public final class ChangePasswordComponent extends javax.swing.JDialog {

    public static boolean getChangePasswordComponent(JFrame parent) {
        ChangePasswordComponent component = new ChangePasswordComponent(parent);
        component.setVisible(true);
        return component.isChangePassword();
    }

    /**
     * A return status code - returned if Cancel button has been pressed
     */
    public static final int RET_CANCEL = 0;
    /**
     * A return status code - returned if OK button has been pressed
     */
    public static final int RET_OK = 1;

    /**
     * Creates new form ChangePasswordComponent
     *
     * @param parent
     */
    private ChangePasswordComponent(JFrame parent) {
        super(parent, true);
        initComponents();

        // Close the dialog when Esc is pressed
        String cancelName = "cancel";
        InputMap inputMap = getRootPane().getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
        inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), cancelName);
        ActionMap actionMap = getRootPane().getActionMap();
        actionMap.put(cancelName, new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent e) {
                doClose(RET_CANCEL);
            }
        });
    }

    /**
     * @return the return status of this dialog - one of RET_OK or RET_CANCEL
     */
    public int getReturnStatus() {
        return returnStatus;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        user_field1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        user_field = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        new_pass_field = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        new_pass2_field = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        getContentPane().setLayout(new java.awt.BorderLayout(10, 10));

        jLabel1.setFont(new java.awt.Font("Noto Sans", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Cambiar Contraseña");
        getContentPane().add(jLabel1, java.awt.BorderLayout.PAGE_START);

        jPanel2.setMinimumSize(new java.awt.Dimension(100, 100));
        jPanel2.setPreferredSize(new java.awt.Dimension(100, 100));
        jPanel2.setLayout(new java.awt.GridLayout(8, 0, 10, 10));

        jPanel7.setLayout(new java.awt.BorderLayout());
        jPanel7.add(user_field1, java.awt.BorderLayout.CENTER);

        jLabel5.setText("Nombre: ");
        jLabel5.setPreferredSize(new java.awt.Dimension(200, 30));
        jPanel7.add(jLabel5, java.awt.BorderLayout.LINE_START);

        jPanel2.add(jPanel7);

        jPanel3.setLayout(new java.awt.BorderLayout());
        jPanel3.add(user_field, java.awt.BorderLayout.CENTER);

        jLabel2.setText("Usuario: ");
        jLabel2.setPreferredSize(new java.awt.Dimension(200, 30));
        jPanel3.add(jLabel2, java.awt.BorderLayout.LINE_START);

        jPanel2.add(jPanel3);

        jPanel4.setLayout(new java.awt.BorderLayout());
        jPanel4.add(new_pass_field, java.awt.BorderLayout.CENTER);

        jLabel3.setText("Nueva Contraseña: ");
        jLabel3.setPreferredSize(new java.awt.Dimension(200, 30));
        jPanel4.add(jLabel3, java.awt.BorderLayout.LINE_START);

        jPanel2.add(jPanel4);

        jPanel5.setLayout(new java.awt.BorderLayout());
        jPanel5.add(new_pass2_field, java.awt.BorderLayout.CENTER);

        jLabel4.setText("Confirmar Contraseña: ");
        jLabel4.setPreferredSize(new java.awt.Dimension(200, 30));
        jPanel5.add(jLabel4, java.awt.BorderLayout.LINE_START);

        jPanel2.add(jPanel5);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        jPanel1.setMaximumSize(new java.awt.Dimension(30, 30));
        jPanel1.setMinimumSize(new java.awt.Dimension(30, 30));
        jPanel1.setPreferredSize(new java.awt.Dimension(30, 30));
        jPanel1.setLayout(new java.awt.GridLayout(1, 0));

        okButton.setText("Actualizar Contraseña");
        okButton.setPreferredSize(new java.awt.Dimension(30, 30));
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        jPanel1.add(okButton);
        getRootPane().setDefaultButton(okButton);

        cancelButton.setText("Cancel");
        cancelButton.setPreferredSize(new java.awt.Dimension(30, 30));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        jPanel1.add(cancelButton);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        doClose(RET_OK);
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * Closes the dialog
     */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JTextField new_pass2_field;
    private javax.swing.JTextField new_pass_field;
    private javax.swing.JButton okButton;
    private javax.swing.JTextField user_field;
    private javax.swing.JTextField user_field1;
    // End of variables declaration//GEN-END:variables
    private String id;
    private DBConnection<OUser> user = ConnectionFactory.getUser();
    private int returnStatus = RET_CANCEL;

    public boolean isChangePassword() {
        if (!isUserCorrect()) {
            return false;
        }
        if (!new_pass_field.getText().equals(new_pass2_field.getText())) {
            JOptionPane.showMessageDialog(this, "Las contraseñas no son iguales");
            return false;
        }
        String query = "UPDATE employee SET user = '%s' AND password = '%s' WHERE id = %s";
        try {
            String _user = EncriptadoAES.doEncrypt(this.user_field.getText(), new_pass2_field.getText());
            String _password = EncriptadoAES.doEncrypt(new_pass2_field.getText(), user_field.getText());
            int row_affected = this.user.getJDBConnection().execute(query.formatted(_user, _password, id));
            if (row_affected < 0) {
                return false;
            }
        } catch (UnsupportedEncodingException | NoSuchAlgorithmException | InvalidKeyException 
                | NoSuchPaddingException | IllegalBlockSizeException | BadPaddingException 
                | SQLException ex) {
            Logger.getLogger(ChangePasswordComponent.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }

    public boolean isUserCorrect() {
        try {
            String[] encryptCredentials = getEncryptCredentials();
            if (encryptCredentials == null) {
                return false;
            }
            String password = EncriptadoAES.doDecrypt(encryptCredentials[1], user_field.getText());
            String _user = EncriptadoAES.doDecrypt(encryptCredentials[0], password);
            if (!_user.equals(user_field.getText())) {
                JOptionPane.showConfirmDialog(this, "Usuario incorrecto");
                return false;
            }
            return true;
        } catch (UnsupportedEncodingException | NoSuchAlgorithmException
                | InvalidKeyException | NoSuchPaddingException
                | IllegalBlockSizeException | BadPaddingException ex) {

            Logger.getLogger(ChangePasswordComponent.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }

    public String[] getEncryptCredentials() {
        try {
            String value = user_field1.getText();
            String query = "SELECT id, user, password FROM employees WHERE CONCAT(first_name, ' ', last_names) = '%s'"
                    .formatted(value);
            ResultSet rs = user.getJDBConnection().query(query);
            if (!rs.next()) {
                JOptionPane.showConfirmDialog(this, "Empleado inexistente");
            }
            id = rs.getString(1);
            if (id.equals("1")) {
                JOptionPane.showConfirmDialog(this, "Empleado inexistente");
            }
            return new String[]{
                rs.getString(2),
                rs.getString(3)
            };
        } catch (SQLException ex) {
            Logger.getLogger(ChangePasswordComponent.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }

}
