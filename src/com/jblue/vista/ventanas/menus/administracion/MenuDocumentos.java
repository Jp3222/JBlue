/*
 * Copyright (C) 2023 jp
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.jblue.vista.ventanas.menus.administracion;

import com.jblue.modelo.objetos.OUsuarios;
import com.jblue.sistema.app.Prop;
import com.jblue.util.SoInfo;
import com.jblue.util.cache.FabricaCache;
import com.jblue.util.cache.MemoCache;
import com.jblue.vista.normas.SuperVentana;
import java.awt.Desktop;
import java.awt.Dimension;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author jp
 */
public class MenuDocumentos extends SuperVentana {

    private final JComponent[] componentes;
    private final MemoCache<OUsuarios> memoria;
    private final ArrayList<OUsuarios> cache;
    private final ArrayList<OUsuarios> lista_aux;
    private final JFileChooser file_chooser;
    
    /**
     * Creates new form MenuDocumentos
     */
    public MenuDocumentos() {
        _TITULO = 11;
        this.file_chooser = new JFileChooser(SoInfo.RUTA_DOCUMENTOS);
        memoria = FabricaCache.MC_USUARIOS;
        cache = memoria.getLista();
        lista_aux = new ArrayList<>(cache.size());
        //
        initComponents();
        componentes = new JComponent[]{
            agregarDoc, olvidarDoc, abrirDocumento, listaDocumentos
        };
        llamable();
    }

    @Override
    protected final void llamable() {
        addComponentes();
        estadoFinal();
        estadoInicial();
        addEventos();
    }

    @Override
    protected void estadoFinal() {
        super.estadoFinal();
        file_chooser.setDialogType(JFileChooser.SAVE_DIALOG);
        file_chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        file_chooser.setMultiSelectionEnabled(false);
        file_chooser.setApproveButtonText("Guardar");
        file_chooser.setPreferredSize(new Dimension(600, 600));
        file_chooser.setSize(600, 600);
        file_chooser.addChoosableFileFilter(new FileNameExtensionFilter("JPG", ".jpg"));
        file_chooser.addChoosableFileFilter(new FileNameExtensionFilter("PNG", ".png"));
        file_chooser.addChoosableFileFilter(new FileNameExtensionFilter("DOCX", ".docx"));
        file_chooser.addChoosableFileFilter(new FileNameExtensionFilter("ODT", ".odt"));
    }

    @Override
    public void estadoInicial() {
        cargarUsuarios();
        habilidarComponentes(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelDocumentos = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        usuarios = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaDocumentos = new javax.swing.JList<>();
        jPanel5 = new javax.swing.JPanel();
        agregarDoc = new javax.swing.JButton();
        olvidarDoc = new javax.swing.JButton();
        eliminarDoc = new javax.swing.JButton();
        abrirDocumento = new javax.swing.JButton();
        CrearDir = new javax.swing.JButton();
        EliminarDir = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        PanelDocumentos.setLayout(new java.awt.BorderLayout());

        jPanel3.setPreferredSize(new java.awt.Dimension(1000, 40));
        jPanel3.setLayout(new java.awt.BorderLayout());

        usuarios.setEditable(true);
        usuarios.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                usuariosItemStateChanged(evt);
            }
        });
        jPanel3.add(usuarios, java.awt.BorderLayout.CENTER);

        jLabel1.setText("Usuario");
        jLabel1.setPreferredSize(new java.awt.Dimension(200, 30));
        jPanel3.add(jLabel1, java.awt.BorderLayout.LINE_START);

        PanelDocumentos.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        jPanel4.setPreferredSize(new java.awt.Dimension(1000, 960));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel2.setPreferredSize(new java.awt.Dimension(300, 623));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jLabel2.setText("Documentos de usuario");
        jLabel2.setPreferredSize(new java.awt.Dimension(300, 40));
        jPanel2.add(jLabel2, java.awt.BorderLayout.PAGE_START);

        listaDocumentos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaDocumentos.setPreferredSize(new java.awt.Dimension(300, 300));
        jScrollPane1.setViewportView(listaDocumentos);

        jPanel2.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel4.add(jPanel2, java.awt.BorderLayout.LINE_START);

        jPanel5.setLayout(new java.awt.GridLayout(3, 3));

        agregarDoc.setText("Agregar Documento");
        agregarDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarDocActionPerformed(evt);
            }
        });
        jPanel5.add(agregarDoc);

        olvidarDoc.setText("Olvidar Documento");
        jPanel5.add(olvidarDoc);

        eliminarDoc.setText("Eliminar Documento");
        eliminarDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarDocActionPerformed(evt);
            }
        });
        jPanel5.add(eliminarDoc);

        abrirDocumento.setText("Abrir Documento");
        abrirDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirDocumentoActionPerformed(evt);
            }
        });
        jPanel5.add(abrirDocumento);

        CrearDir.setText("Crear sub carpeta");
        jPanel5.add(CrearDir);

        EliminarDir.setText("Eliminar sub carpeta");
        jPanel5.add(EliminarDir);

        jLabel6.setText("jLabel3");
        jPanel5.add(jLabel6);

        jLabel7.setText("jLabel3");
        jPanel5.add(jLabel7);

        jLabel8.setText("jLabel3");
        jPanel5.add(jLabel8);

        jPanel4.add(jPanel5, java.awt.BorderLayout.CENTER);

        PanelDocumentos.add(jPanel4, java.awt.BorderLayout.CENTER);

        getContentPane().add(PanelDocumentos, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void usuariosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_usuariosItemStateChanged
        if (usuarios.getSelectedIndex() <= 0) {
            habilidarComponentes(false);
            return;
        }
        habilidarComponentes(true);
    }//GEN-LAST:event_usuariosItemStateChanged

    private void agregarDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarDocActionPerformed
        try {
            int button = file_chooser.showOpenDialog(this);
            if (button == JFileChooser.CANCEL_OPTION) {
                return;
            }
            File file = file_chooser.getSelectedFile();
            if (file == null || !file.exists()) {
                JOptionPane.showMessageDialog(this, "El archivo no es valido", "Seleccione Documento", JOptionPane.ERROR_MESSAGE);
                return;
            }
            File dir_us = Prop.FIL_DIR_PROG_USUARIOS;
            String usu = usuarios.getItemAt(usuarios.getSelectedIndex());
            StringBuilder sb = new StringBuilder(dir_us.getAbsolutePath());
            sb.append("/").append(usu).append("/").append(file.getName());
            File dir_out = new File(sb.toString());
            Files.copy(file.toPath(), new FileOutputStream(dir_out));
        } catch (IOException ex) {
            Logger.getLogger(MenuDocumentos.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_agregarDocActionPerformed

    private void abrirDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirDocumentoActionPerformed
        File dir_us = Prop.FIL_DIR_PROG_USUARIOS;
        String usu = usuarios.getItemAt(usuarios.getSelectedIndex());
        StringBuilder sb = new StringBuilder(dir_us.getAbsolutePath());
        sb.append("/").append(usu).append("/");
        file_chooser.setCurrentDirectory(new File(sb.toString()));
        int button = file_chooser.showOpenDialog(this);
        if (button == JFileChooser.CANCEL_OPTION) {
            return;
        }
        File file = file_chooser.getSelectedFile();
        if (file == null || !file.exists()) {
            JOptionPane.showMessageDialog(this, "El archivo no es valido", "Seleccione Documento", JOptionPane.ERROR_MESSAGE);
            return;
        }
        try {
            Desktop.getDesktop().open(file);
        } catch (IOException ex) {
            Logger.getLogger(MenuDocumentos.class.getName()).log(Level.SEVERE, null, ex);
        }
        file_chooser.setCurrentDirectory(new File(SoInfo.RUTA_DE_USUARIO));
    }//GEN-LAST:event_abrirDocumentoActionPerformed

    private void eliminarDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarDocActionPerformed
        File dir_us = Prop.FIL_DIR_PROG_USUARIOS;
        String usu = usuarios.getItemAt(usuarios.getSelectedIndex());
        StringBuilder sb = new StringBuilder(dir_us.getAbsolutePath());
        sb.append("/").append(usu).append("/");
        file_chooser.setCurrentDirectory(new File(sb.toString()));
        int button = file_chooser.showOpenDialog(this);
        if (button == JFileChooser.CANCEL_OPTION) {
            return;
        }
        File file = file_chooser.getSelectedFile();
        if (file == null || !file.exists()) {
            JOptionPane.showMessageDialog(this, "El archivo no es valido", "Seleccione Documento", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (file.delete()) {
            JOptionPane.showMessageDialog(this, "Eliminacion Exitosas");
        }
        file_chooser.setCurrentDirectory(new File(SoInfo.RUTA_DE_USUARIO));
    }//GEN-LAST:event_eliminarDocActionPerformed

    public void cargarUsuarios() {
        usuarios.addItem("Seleccione Usuario");
        for (OUsuarios i : cache) {
            usuarios.addItem(i.getStringR());
        }
    }

    public void habilidarComponentes(boolean estado) {
        for (JComponent i : componentes) {
            i.setEnabled(estado);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CrearDir;
    private javax.swing.JButton EliminarDir;
    private javax.swing.JPanel PanelDocumentos;
    private javax.swing.JButton abrirDocumento;
    private javax.swing.JButton agregarDoc;
    private javax.swing.JButton eliminarDoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listaDocumentos;
    private javax.swing.JButton olvidarDoc;
    private javax.swing.JComboBox<String> usuarios;
    // End of variables declaration//GEN-END:variables
}
